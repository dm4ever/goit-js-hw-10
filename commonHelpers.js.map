{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst showTime = document.querySelectorAll('.value');\nlet userSelectedDate;\nlet interval;\nstartButton.disabled = true;\n\nconst selector = document.querySelector('#datetime-picker');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.show({\n        title: 'ERROR:',\n        titleColor: 'red',\n        message: 'Please choose a date in the future',\n        messageColor: 'red',\n        color: 'red',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(selector, options);\n\nstartButton.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    interval = userSelectedDate - new Date();\n    event.preventDefault();\n    if (interval < 1) {\n      startButton.disabled = true;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(interval);\n    showTime[0].innerText = timer.days.toString().padStart(2, '0');\n    showTime[1].innerText = timer.hours.toString().padStart(2, '0');\n    showTime[2].innerText = timer.minutes.toString().padStart(2, '0');\n    showTime[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n  selector.disabled = true;\n  startButton.disabled = true;\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n  };\n}\n"],"names":["startButton","showTime","userSelectedDate","interval","selector","options","selectedDates","iziToast","flatpickr","event","repeatTime","timer","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2FAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,iBAAiB,QAAQ,EACnD,IAAIC,EACAC,EACJH,EAAY,SAAW,GAEvB,MAAMI,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAC9BJ,GAAoB,IAAI,MAC1BK,EAAS,KAAK,CACZ,MAAO,SACP,WAAY,MACZ,QAAS,qCACT,aAAc,MACd,MAAO,MACP,SAAU,UAClB,CAAO,EACDP,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAQ,EAAUJ,EAAUC,CAAO,EAE3BL,EAAY,iBAAiB,QAASS,GAAS,CAC7C,MAAMC,EAAa,YAAY,IAAM,CAGnC,GAFAP,EAAWD,EAAmB,IAAI,KAClCO,EAAM,eAAc,EAChBN,EAAW,EAAG,CAChBH,EAAY,SAAW,GACvB,cAAcU,CAAU,EACxB,MACD,CACD,MAAMC,EAAQC,EAAUT,CAAQ,EAChCF,EAAS,CAAC,EAAE,UAAYU,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7DV,EAAS,CAAC,EAAE,UAAYU,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DV,EAAS,CAAC,EAAE,UAAYU,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEV,EAAS,CAAC,EAAE,UAAYU,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,EACPP,EAAS,SAAW,GACpBJ,EAAY,SAAW,EACzB,CAAC,EAED,SAASY,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CACL,KAAAC,EACA,MAAAC,EACA,QAAAC,EACA,QAAAC,CACJ,CACA"}